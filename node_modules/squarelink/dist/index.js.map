{"version":3,"sources":["../src/index.js"],"names":["require","Squarelink","client_id","network","opts","_loadNetworks","call","scope","stopped","cb","_waitForNetworks","_validateParams","changeNetwork","engine","resolve","reject","net_version","_getNetVersion","_getRPCInfo","rpcUrl","connectionType","skipCache","_initEngine","self","accounts","ProviderEngine","setSkipCacheFlag","isSquarelink","isConnected","send","payload","callback","sendAsync","jsonrpc","id","method","params","error","response","result","length","undefined","message","SqlkError","fixtureSubprovider","FixtureSubprovider","web3_clientVersion","VERSION","net_listening","eth_hashrate","eth_mining","eth_syncing","nonceSubprovider","NonceSubprovider","cacheSubprovider","CacheSubprovider","walletSubprovider","HookedWalletSubprovider","getAccounts","then","email","name","securitySettings","defaultEmail","defaultName","defaultSecuritySettings","catch","err","getCoinbase","signTransaction","from","res","signMessage","data","account","signPersonalMessage","signTypedMessage","signTypedMessageV3","addProvider","RpcSubprovider","SubscriptionSubprovider","FilterSubprovider","WebSocketSubprovider","on","console","stack","enable","start","includes"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable */\nrequire(\"babel-core/register\");\nrequire(\"babel-polyfill\");\nimport ProviderEngine from 'squarelink-provider-engine'\nimport CacheSubprovider from 'squarelink-provider-engine/subproviders/cache'\nimport FixtureSubprovider from 'squarelink-provider-engine/subproviders/fixture'\nimport FilterSubprovider from 'squarelink-provider-engine/subproviders/filters'\nimport HookedWalletSubprovider from 'squarelink-provider-engine/subproviders/hooked-wallet'\nimport NonceSubprovider from 'squarelink-provider-engine/subproviders/nonce-tracker'\nimport RpcSubprovider from 'squarelink-provider-engine/subproviders/rpc'\nimport SubscriptionSubprovider from 'squarelink-provider-engine/subproviders/subscriptions'\nimport WebSocketSubprovider from 'squarelink-provider-engine/subproviders/websocket'\n\nimport { VERSION } from './config'\nimport {\n  _serialize,\n  _validateParams,\n  _getRPCInfo,\n  _validateSecureOrigin,\n  _getNetVersion,\n} from './util'\nimport { _loadNetworks, _waitForNetworks } from './networks'\nimport { _getAccounts, _signTx, _signMsg } from './walletMethods'\nimport { SqlkError } from './error'\n\nexport default class Squarelink {\n  /**\n   * @param {string} clientId - Squarelink Client ID\n   * @param {string} [network] - name of the network\n   * @param {object} [network]\n   * @param {string} [network.url] - the RPC Endpoint\n   * @param {string} [network.chainId]\n   */\n  constructor(client_id, network='mainnet', opts = {}) {\n    _loadNetworks.call(this)\n    this.client_id = client_id\n    this.network = network\n    this.scope = opts.scope || []\n    this.stopped = true\n  }\n\n  /**\n   * @returns { Web3Provider } a Web3Provider for use in web3.js\n   */\n  async getProvider(cb) {\n    try {\n      await _waitForNetworks.call(this)\n      const { client_id, network, scope } = this\n      _validateSecureOrigin()\n      _validateParams.call(this, { client_id, network, scope })\n      this.changeNetwork(network)\n      // Support callbacks over promises\n      if (cb) return cb(this.engine, null)\n      return Promise.resolve(this.engine)\n    } catch (err) {\n      if (cb) return cb(null, err)\n      return Promise.reject(err)\n    }\n  }\n\n  /**\n   * Change the connected network\n   * @param {string} network\n   * @param {object} network\n   * @param {string} network.url\n   * @param {string} network.chainId\n   */\n  changeNetwork(network) {\n    const { client_id } = this\n    _validateParams.call(this, { client_id, network })\n    this.network = network\n    this.net_version = _getNetVersion.call(this, network)\n    const { rpcUrl, connectionType, skipCache } = _getRPCInfo.call(this, network)\n    this.connectionType = connectionType\n    this.rpcUrl = rpcUrl\n    this._initEngine(skipCache)\n  }\n\n  /* END CUSTOM SQUARELINK METHODS */\n\n  _initEngine(skipCache) {\n    var self = this\n    this.accounts = []\n    var engine = new ProviderEngine({\n      setSkipCacheFlag: skipCache,\n    })\n    engine.isSquarelink = true\n    engine.isConnected = () => {\n      return true\n    }\n    engine.send = (payload, callback) => {\n      if (typeof payload === 'string') {\n        return new Promise((resolve, reject) => {\n          engine.sendAsync({\n            jsonrpc: '2.0',\n            id: 42,\n            method: payload,\n            params: callback || [],\n          }, (error, response) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve(response.result)\n            }\n          })\n        })\n      }\n\n      if (callback) {\n        engine.sendAsync(payload, callback)\n        return\n      }\n\n      let result = null\n      switch (payload.method) {\n        case 'eth_accounts':\n          result = this.accounts.length ? this.accounts : []\n          break\n\n        case 'eth_coinbase':\n          result = this.accounts.length ? this.accounts[0] : undefined\n          break\n\n        case 'net_version':\n          result = this.net_version || null\n          break\n\n        default:\n          var message = `The Squarelink Web3 object does not support synchronous methods like ${payload.method} without a callback parameter.`\n          throw new SqlkError(message)\n      }\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result,\n      }\n    }\n\n    /**\n     * START OF MIDDLEWARE DECLARATIONS\n     */\n    const fixtureSubprovider = new FixtureSubprovider({\n      web3_clientVersion: `Squarelink/v${VERSION}/javascript`,\n      net_listening: true,\n      eth_hashrate: '0x00',\n      eth_mining: false,\n      eth_syncing: true,\n    })\n    const nonceSubprovider = new NonceSubprovider()\n    const cacheSubprovider = new CacheSubprovider()\n    /* Squarelink ID/Wallet Management */\n    const walletSubprovider = new HookedWalletSubprovider({\n      getAccounts: async function(cb){\n        if (self.accounts.length) cb(null, self.accounts)\n        else {\n          _getAccounts(self.client_id, { scope: self.scope }).then(({ email, name, securitySettings, accounts }) => {\n            self.accounts = accounts\n            self.defaultEmail = email\n            self.defaultName = name\n            self.defaultSecuritySettings = securitySettings\n            cb(null, accounts)\n          }).catch(err => cb(err, null))\n        }\n      },\n      getCoinbase: async function(cb) {\n        this.getAccounts()\n          .then((accounts) => cb(null, accounts[0]))\n          .catch(err => cb(err, null))\n      },\n      signTransaction: async function(payload, cb) {\n        let { from } = payload\n        if (typeof from === 'number')\n          from = self.accounts[from]\n        _signTx({\n          ...payload,\n          from,\n          method: 'eth_signTransaction',\n          client_id: self.client_id,\n          network: self.network\n        })\n        .then(res => {\n          cb(null, res)\n        })\n        .catch(err => {\n          cb(err, null)\n        })\n      },\n      signMessage: async function(payload, cb) {\n        let { from, data, method } = payload\n        if (typeof from === 'number')\n          from = self.accounts[from]\n        _signMsg({\n          client_id: self.client_id,\n          method: method || 'eth_sign',\n          message: data,\n          account: from,\n        })\n        .then(res => cb(null, res))\n        .catch(err => cb(err, null))\n      },\n      signPersonalMessage: async function(payload, cb) {\n        this.signMessage({ ...payload, method: 'eth_personalSign' }, (err, res) => {\n          if (err) cb(err, null)\n          else cb(null, res)\n        })\n      },\n      signTypedMessage: async function(payload, cb) {\n        this.signMessage({ ...payload, method: 'eth_signTypedData' }, (err, res) => {\n          if (err) cb(err, null)\n          else cb(null, res)\n        })\n      },\n      signTypedMessageV3: async function(payload, cb) {\n        this.signMessage({ ...payload, method: 'eth_signTypedData_v3' }, (err, res) => {\n          if (err) cb(err, null)\n          else cb(null, res)\n        })\n      }\n    })\n    /* ADD MIDDELWARE (PRESERVE ORDER) */\n    engine.addProvider(fixtureSubprovider)\n    engine.addProvider(nonceSubprovider)\n    engine.addProvider(cacheSubprovider)\n    engine.addProvider(walletSubprovider, 0)\n\n    const { rpcUrl, connectionType } = this\n    if (connectionType === 'http') {\n      engine.addProvider(new RpcSubprovider({ rpcUrl }))\n      engine.addProvider(new SubscriptionSubprovider(), 2)\n      engine.addProvider(new FilterSubprovider(), 1)\n    } else if (connectionType === 'ws') {\n      engine.addProvider(new WebSocketSubprovider({ rpcUrl }))\n    }\n\n    /* END OF MIDDLEWARE */\n\n    engine.on('error', function(err){\n      console.error(err.stack)\n    })\n\n    engine.enable = () =>\n      new Promise((resolve, reject) => {\n        engine.sendAsync({ method: 'eth_accounts' }, (error, response) => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve(response.result)\n          }\n        })\n      })\n\n    engine.start()\n\n    this.engine = engine\n  }\n\n  /* CUSTOM SQUARELINK METHODS */\n\n  /**\n   * @returns {string} the user's email\n   */\n  getEmail() {\n    if (!this.scope.includes('user') && !this.scope.includes('user:email'))\n      throw new SqlkError(`Please enable the user:email scope when initializing Squarelink`)\n    return this.defaultEmail\n  }\n\n  /**\n   * Returns the name of the authenticated user\n   * @returns {string} the user's name\n   */\n  getName() {\n    if (!this.scope.includes('user') && !this.scope.includes('user:name'))\n      throw new SqlkError(`Please enable the user:name scope when initializing Squarelink`)\n    return this.defaultName\n  }\n\n  /**\n   * @typedef {Object} SquarelinkSecurity\n   * @property {string} has2fa\n   * @property {string} hasRecovery\n   * @property {string} emailVerified\n   */\n  /**\n   * Returns the security settings of the authenticated user\n   * @returns {SquarelinkSecurity} security settings\n   */\n  getSecuritySettings() {\n    if (!this.scope.includes('user') && !this.scope.includes('user:security'))\n      throw new SqlkError(`Please enable the user:security scope when initializing Squarelink`)\n    return this.defaultSecuritySettings\n  }\n}\n"]}