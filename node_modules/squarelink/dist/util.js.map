{"version":3,"sources":["../src/util.js"],"names":["SCOPES","_serialize","obj","encodeURIComponent","_fetch","url","resolve","reject","xhr","XMLHttpRequest","open","send","onload","status","SqlkError","JSON","parse","response","onerror","_popup","popup","iframe","error","result","popupTick","setInterval","clearInterval","closed","window","removeEventListener","preloader","document","getElementById","parentNode","removeChild","onClosed","addEventListener","e","data","origin","height","type","close","undefined","_validateParams","client_id","network","scope","Array","isArray","i","includes","match","chainId","parseInt","skipCache","NETWORKS","sdkVersion","sdkParts","VERSION","split","netParts","_validateSecureOrigin","isLocalhost","location","hostname","isSecureOrigin","protocol","isChromeExt","isSecure","port","_getRPCInfo","rpcUrl","netInfo","toLowerCase","connectionType","_getNetVersion"],"mappings":"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","file":"util.js","sourcesContent":["/* eslint-disable */\nimport { VERSION } from './config'\nimport { SqlkError } from './error'\nimport getPopup from './popup'\n\nconst SCOPES = [\n  'wallets:admin',\n  'wallets:edit',\n  'wallets:create',\n  'wallets:remove',\n  'wallets:read',\n  'user',\n  'user:name',\n  'user:email',\n  'user:security'\n]\n\n/**\n * URL-encodes a request object\n * @param {object} obj\n */\nexport const _serialize = function(obj) {\n  return encodeURIComponent(JSON.stringify(obj))\n}\n\n/**\n * Creates and executes GET Request\n * @param {string} url\n */\nexport const _fetch = function(url) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', url)\n    xhr.send()\n    xhr.onload = function() {\n      if (xhr.status != 200) {\n        reject(new SqlkError(`Issue connecting to Squarelink servers`))\n      } else {\n        resolve(JSON.parse(xhr.response))\n      }\n    }\n    xhr.onerror = function() {\n      reject(new SqlkError(`Issue connecting to Squarelink servers`))\n    }\n  })\n}\n\n/**\n * Creates Squarelink popup and returns posted result\n * @param {string} url\n */\n export const _popup = function(url) {\n   return new Promise(async (resolve, reject) => {\n     const { popup, iframe, error } = await getPopup(url)\n     if (error) return resolve({ error: 'Window closed' })\n\n     var result = false\n\n     if (popup) {\n       // Poll to check if popup has been closed\n       var popupTick = setInterval(function() {\n         if (result) {\n           clearInterval(popupTick)\n         } else if (popup.closed) {\n           result = true\n           window.removeEventListener('message', function() {})\n           clearInterval(popupTick)\n           resolve({ error: 'Window closed' })\n           const preloader = document.getElementById('squarelink-preloader-container')\n           preloader.parentNode.removeChild(preloader)\n         }\n       }, 1)\n     }\n\n     if (iframe) {\n       iframe.onClosed = (error) => {\n         if (!result) {\n           result = true\n           window.removeEventListener('message', function() {})\n           resolve({ error: error || 'Window closed' })\n         }\n       }\n     }\n\n     window.addEventListener('message', function(e) {\n       const { origin, height, type } = e.data\n       if (type === 'onload') return\n       if (origin === 'squarelink' && !result) {\n         result = true\n         window.removeEventListener('message', function() {})\n         if (popup) {\n           popup.close()\n           const preloader = document.getElementById('squarelink-preloader-container')\n           preloader.parentNode.removeChild(preloader)\n         } else {\n           iframe.close()\n         }\n         resolve({ ...e.data, origin: undefined, height: undefined })\n       }\n     }, false)\n   })\n }\n\n/**\n * Validates Squarelink inputs\n * @param {string} client_id\n * @param {string|object} [network]\n * @param {array} [scope]\n */\nexport const _validateParams = function({ client_id, network, scope }) {\n  if (scope) {\n    if (!Array.isArray(scope))\n      throw new SqlkError(`'scope' must be an Array`)\n    for(let i in scope) {\n      if (!SCOPES.includes(scope[i]))\n        throw new SqlkError(`We do not support the ${scope[i]} scope`)\n    }\n  }\n  if (typeof network === 'object') {\n    if (!network.url)\n      throw new SqlkError('Please provide an RPC endpoint for your custom network')\n    else if (!network.url.match(/(wss|https){1}?:(\\/?\\/?)[^\\s]+/))\n      throw new SqlkError('We do not currently support insecure (http://, ws://) RPC connections. Try updating squarelink to its latest version!')\n    else if (network.chainId && (network.chainId !== parseInt(network.chainId) || network.chainId < 0 || network.chainId > 500000))\n      throw new SqlkError('Please provide a valid Chain ID')\n    else if (network.skipCache !== undefined && typeof network.skipCache !== 'boolean')\n      throw new SqlkError('the `skipCache` paramter must be a boolean')\n  } else if (!this.NETWORKS[network]) {\n    throw new SqlkError('Invalid network provided')\n  } else if (!!this.NETWORKS[network].sdkVersion) {\n    const { sdkVersion } = this.NETWORKS[network]\n    let sdkParts = VERSION.split('.')\n    let netParts = sdkVersion.split('.')\n    for (let i = 0; i < 3; i++) {\n      if (parseInt(sdkParts[i]) > parseInt(netParts[i])) return\n      if (parseInt(sdkParts[i]) < parseInt(netParts[i])) {\n        throw new SqlkError(`You need to update Squarelink to squarelink@${sdkVersion} to use that network`)\n      }\n    }\n  }\n}\n\n/**\n * Notifies developer that their app won't work if on an insecure origin\n */\nexport const _validateSecureOrigin = function() {\n  const isLocalhost = location.hostname === 'localhost' || location.hostname === '127.0.0.1'\n  const isSecureOrigin = location.protocol === 'https:'\n  const isChromeExt = location.protocol === 'chrome-extension:'\n  const isSecure = isLocalhost || isSecureOrigin || isChromeExt\n\n  if (!isSecure) {\n    throw new SqlkError(`Access to the Squarelink Web3 Engine is restricted to secure origins.\\nIf this is a development environment please use http://localhost:${\n      location.port\n    } instead.\\nOtherwise, please use an SSL certificate.`)\n  }\n}\n\n/**\n * Gets RPC info from network parameter\n * @param {string|object} network\n */\nexport const _getRPCInfo = function(network) {\n  var rpcUrl\n  var skipCache = true\n  if (typeof network === 'object') {\n    rpcUrl = network.url\n    skipCache = network.skipCache !== undefined ? network.skipCache : true\n  } else {\n    let netInfo = this.NETWORKS[network]\n    rpcUrl = netInfo.rpcUrl\n    skipCache = netInfo.skipCache !== undefined ? netInfo.skipCache : true\n  }\n  const protocol = rpcUrl.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'http':\n    case 'https':\n      return {\n        rpcUrl,\n        skipCache,\n        connectionType: 'http'\n      }\n    case 'ws':\n    case 'wss':\n      return {\n        rpcUrl,\n        skipCache,\n        connectionType: 'ws'\n      }\n    default:\n      throw new SqlkError(`Unrecognized protocol in \"${rpcUrl}\"`)\n  }\n}\n\n/**\n * Get the current network version\n * @param {string|object} network\n */\nexport const _getNetVersion = function(network) {\n  if (typeof network === 'object') return network.chainId || null\n  return this.NETWORKS[network].chainId\n}\n"]}