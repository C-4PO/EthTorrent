'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._waitForNetworks = exports._loadNetworks = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _util = require('./util');

var _config = require('./config');

var _error = require('./error');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _loadNetworks = exports._loadNetworks = function _loadNetworks() {
  var _this = this;

  this.loadingNetworks = true;
  (0, _util._fetch)(_config.NETWORK_LIST).then(function (data) {
    _this.NETWORKS = data;
    _this.loadingNetworks = false;
  }).catch(function (err) {
    throw new _error.SqlkError('Issue connecting to Squarelink');
  });
};

var _waitForNetworks = exports._waitForNetworks = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
    var _this2 = this;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt('return', new _promise2.default(function (resolve, reject) {
              var interval = setInterval(function () {
                if (!_this2.loadingNetworks) {
                  clearInterval(interval);
                  resolve();
                }
              }, 1);
            }));

          case 1:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function _waitForNetworks() {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=networks.js.map