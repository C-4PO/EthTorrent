{"version":3,"sources":["../src/networks.js"],"names":["_loadNetworks","loadingNetworks","NETWORK_LIST","then","NETWORKS","data","catch","SqlkError","_waitForNetworks","resolve","reject","interval","setInterval","clearInterval"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEO,IAAMA,wCAAgB,SAAhBA,aAAgB,GAAY;AAAA;;AACvC,OAAKC,eAAL,GAAuB,IAAvB;AACA,oBAAOC,oBAAP,EAAqBC,IAArB,CAA0B,gBAAQ;AAChC,UAAKC,QAAL,GAAgBC,IAAhB;AACA,UAAKJ,eAAL,GAAuB,KAAvB;AACD,GAHD,EAGGK,KAHH,CAGS,eAAO;AACd,UAAM,IAAIC,gBAAJ,CAAc,gCAAd,CAAN;AACD,GALD;AAMD,CARM;;AAUA,IAAMC;AAAA,sFAAmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6CACvB,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,WAAWC,YAAY,YAAM;AAC/B,oBAAI,CAAC,OAAKX,eAAV,EAA2B;AACzBY,gCAAcF,QAAd;AACAF;AACD;AACF,eALc,EAKZ,CALY,CAAf;AAMD,aAPM,CADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"networks.js","sourcesContent":["import { _fetch } from './util'\nimport { NETWORK_LIST } from './config'\nimport { SqlkError } from './error'\n\nexport const _loadNetworks = function () {\n  this.loadingNetworks = true\n  _fetch(NETWORK_LIST).then(data => {\n    this.NETWORKS = data\n    this.loadingNetworks = false\n  }).catch(err => {\n    throw new SqlkError('Issue connecting to Squarelink')\n  })\n}\n\nexport const _waitForNetworks = async function () {\n  return new Promise((resolve, reject) => {\n    let interval = setInterval(() => {\n      if (!this.loadingNetworks) {\n        clearInterval(interval)\n        resolve()\n      }\n    }, 1)\n  })\n}\n"]}